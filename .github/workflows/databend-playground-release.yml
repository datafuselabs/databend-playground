name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  publish:
    name: Release assets
    runs-on: ${{ matrix.config.os }}
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.REPO_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.REPO_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: us-east-2
      AWS_DEFAULT_OUTPUT: json
    strategy:
      fail-fast: false
      matrix:
        config:
          # Linux
          - {os: ubuntu-latest, toolchain: stable, target: x86_64-unknown-linux-gnu, cross: false}
          - {os: ubuntu-latest, toolchain: stable, target: aarch64-unknown-linux-gnu, cross: true}
          # Macos
          - {os: macos-11, toolchain: stable, target: x86_64-apple-darwin, cross: false}
          - {os: macos-11, toolchain: stable, target: aarch64-apple-darwin, cross: false}

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Rust setup
        run: |
          bash ./scripts/setup/dev_setup.sh
          cargo install --version 0.1.16 cross
      - name: Build Binary
        run: |
          if [ ${{ matrix.config.os }} = "macos-11" ]; then
              rustup target add aarch64-apple-darwin
          fi
          if [ ${{ matrix.config.cross }} = true ]; then
              cross build --release --target=${{ matrix.config.target }}
          else
              cargo build --release --target=${{ matrix.config.target }}
          fi
      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}

      - name: Pack binaries
        run: |
          if [ ${{ matrix.config.os }} = "macos-11" ]; then
            brew install gnu-tar
            sudo /usr/sbin/purge
            gtar -C ./target/${{ matrix.config.target }}/release -czvf databend-${{ steps.get_version.outputs.VERSION }}-${{ matrix.config.target }}.tar.gz databend-query databend-meta
            gtar -C ./target/${{ matrix.config.target }}/release -czvf bendctl-${{ steps.get_version.outputs.VERSION }}-${{ matrix.config.target }}.tar.gz bendctl
          else
            tar -C ./target/${{ matrix.config.target }}/release -czvf databend-${{ steps.get_version.outputs.VERSION }}-${{ matrix.config.target }}.tar.gz databend-query databend-meta
            tar -C ./target/${{ matrix.config.target }}/release -czvf bendctl-${{ steps.get_version.outputs.VERSION }}-${{ matrix.config.target }}.tar.gz bendctl
          fi

      - name: Release databend
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: databend-${{ steps.get_version.outputs.VERSION }}-${{ matrix.config.target }}.*
          asset_name: databend-${{ steps.get_version.outputs.VERSION }}-${{ matrix.config.target }}
          tag: ${{ github.ref }}
          file_glob: true
          overwrite: true
          body: ${{ steps.changelog_reader.outputs.log_entry }}

      - name: Release bendctl
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: bendctl-${{ steps.get_version.outputs.VERSION }}-${{ matrix.config.target }}.*
          asset_name: bendctl-${{ steps.get_version.outputs.VERSION }}-${{ matrix.config.target }}
          tag: ${{ github.ref }}
          file_glob: true
          overwrite: true
          body: ${{ steps.changelog_reader.outputs.log_entry }}

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.REPO_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.REPO_SECRET_ACCESS_KEY }}
          aws-region: us-east-2
      - name: Sync release to S3
        run: |
          aws s3 cp databend-${{ steps.get_version.outputs.VERSION }}-${{ matrix.config.target }}.tar.gz s3://repo.databend.rs/databend/${{ steps.get_version.outputs.VERSION }}/databend-${{ steps.get_version.outputs.VERSION }}-${{ matrix.config.target }}.tar.gz
          aws s3 cp bendctl-${{ steps.get_version.outputs.VERSION }}-${{ matrix.config.target }}.tar.gz s3://repo.databend.rs/databend/${{ steps.get_version.outputs.VERSION }}/bendctl-${{ steps.get_version.outputs.VERSION }}-${{ matrix.config.target }}.tar.gz
          curl https://api.github.com/repos/datafuselabs/databend/tags > tags.json
          cat tags.json
          aws s3 cp ./tags.json s3://repo.databend.rs/databend/tags.json
  release-docker:
    name: Release assets
    runs-on: ${{ matrix.config.os }}
    needs: [publish]
    strategy:
      fail-fast: false
      matrix:
        config:
          # Linux
          - { os: ubuntu-latest, toolchain: stable, target: x86_64-unknown-linux-gnu, cross: false }
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ${{ secrets.DOCKERHUB_NAMESPACE }}/databend:${{ steps.get_version.outputs.VERSION }}
          platforms: linux/amd64
          context: .
          file: ./docker/release/Dockerfile
          build-args: |
            VERSION=${{ steps.get_version.outputs.VERSION }}
